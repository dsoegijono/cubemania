package {		import flash.display.Sprite;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;	import flash.geom.Point;	import flash.events.Event;	import flash.filters.DropShadowFilter;		public class Tip extends Sprite {				private var field:TextField;		private var targetX:int;		private var targetY:int;		private var targetAlpha:int;				public function Tip() {			alpha = 0;			initField();			filters = [new DropShadowFilter(2, 45, 0x000000, 0.5)];		}				private function initField():void {			field = new TextField();			field.autoSize = TextFieldAutoSize.LEFT;			field.selectable = false;			field.multiline = true;			addChild(field);		}				public function show(tip:String):void {			targetAlpha = 1;			field.htmlText = tip;			field.setTextFormat(new TextFormat("Verdana", 12, 0x000000));			field.x = field.y = 3;			graphics.clear();			graphics.lineStyle(2, 0xDDFF00);			graphics.beginFill(0xFFFFFF);			graphics.drawRoundRect(0, 0, field.width + 6, field.height + 6, 10);			addEventListener(Event.ENTER_FRAME, onEnterFrame);		}				public function move(position:Point):void {			targetX = position.x;			targetY = position.y;			addEventListener(Event.ENTER_FRAME, onEnterFrame);		}				public function hide():void {			targetAlpha = 0;			addEventListener(Event.ENTER_FRAME, onEnterFrame);		}				private function onEnterFrame(event:Event):void {			x += Math.round((targetX - x) / 2);			y += Math.round((targetY - y) / 2);			alpha += (targetAlpha - alpha) / 4;			if (Math.abs(targetX - x) < 0.1 && Math.abs(targetY - y) < 0.1 && Math.abs(targetAlpha - alpha) < 0.1) {				x = targetX;				y = targetY;				alpha = targetAlpha;				removeEventListener(Event.ENTER_FRAME, onEnterFrame);			}		}			}	}