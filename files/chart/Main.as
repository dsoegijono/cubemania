package {		import flash.display.Sprite;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.net.URLRequest;	import flash.net.URLLoader;	import flash.net.URLRequestHeader;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.KeyboardEvent;	import flash.external.ExternalInterface;		public class Main extends Sprite {				private var dataUrls:Array;		private var chart:Chart;				public function Main() {			initStage();			initParameters();			initCallbacks();			loadData();			stage.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);		}						private function initStage():void {			stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.NO_SCALE;		}				private function initParameters():void {			var parameters:Object = loaderInfo.parameters;			dataUrls = parameters["dataUrl"].split(";");		}				private function initCallbacks():void {			ExternalInterface.addCallback("addItem", addItem);			ExternalInterface.addCallback("addSeries", addSeries);			ExternalInterface.addCallback("setItemCount", setItemCount);		}				private function onKeyDown(event:KeyboardEvent):void {			if (event.keyCode == 32) ExternalInterface.call("toggleTimer");		}				private function loadData():void {			var loader:URLLoader = new URLLoader();			loader.addEventListener(Event.COMPLETE, onDataComplete);			loader.load(new URLRequest(dataUrls[0]));			for (var i:uint = 1; i < dataUrls.length; i++) {				addSeries(dataUrls[i]);			}		}				private function onDataComplete(event:Event):void {			chart = new Chart(new XML(event.target.data));			addChild(chart);			chart.draw();		}				private function addItem(item:String):void {			chart.addItem(new XML(item));		}				private function addSeries(url:String):void {			var loader:URLLoader = new URLLoader();			loader.addEventListener(Event.COMPLETE, onSeriesComplete);			loader.load(new URLRequest(url));		}				private function onSeriesComplete(event:Event):void {			chart.addSeries(new XML(event.target.data).series[0]);			chart.draw();		}				private function setItemCount(count:String):void {			chart.setItemCount(parseInt(count));			chart.draw();		}			}	}