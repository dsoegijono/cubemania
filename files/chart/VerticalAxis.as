package {		public class VerticalAxis extends Axis {				private var min:Number = Infinity;		private var max:Number = -Infinity;				public function VerticalAxis(w:int, h:int) {			super(w, h);			createLabels();		}				private function createLabels():void {			minLabel = createLabel(min);			maxLabel = createLabel(max);			maxLabel.y = 5;		}				private function createLabel(value:int):AxisLabel {			var label:AxisLabel = new AxisLabel();			addChild(label);			return label;		}				public function toPosition(value:String):int {			var ratio:Number = (int(value) - min) / (max - min);			return h - ratio * h;		}				public function updateExtremes(min:String, max:String):void {			updateExtreme(min);			updateExtreme(max);		}				private function updateExtreme(value:String):void {			var v:Number = int(value);			if (v < min) min = v;			else if (v > max) max = v;		}				public function resetExtreme():void {			min = Infinity;			max = -Infinity;		}				public function draw():void {			graphics.clear();			drawAxis();			minLabel.setTitle(format(min));			minLabel.x = w - minLabel.width - 5;			minLabel.y = h - minLabel.height - 5;			maxLabel.setTitle(format(max));			maxLabel.x = w - maxLabel.width - 5;			//drawGrid();		}				private function drawAxis():void {			graphics.lineStyle(2, 0xFFFFFF);			graphics.moveTo(w, 0);			graphics.lineTo(w, h);		}				private function format(value:int):String {			var m:int = value / (100 * 60);			var s:int = (value - m * 100 * 60) / 100;			var ms:int = (value - m * 100 * 60 - s * 100);			return prependZero(m) + ":" + prependZero(s) + ":" + prependZero(ms);		}				private function prependZero(value:int):String {			if (value < 10) return "0" + value;			return String(value);		}				/*private function drawGrid():void {			var interval:int = max - min;			var step:int = interval / 10;			for (var i:uint = 1; i < 10; i++) {				drawLine(h - i * step / interval * h);				createLabel(min + i * step, h - i * step / interval * h);			}		}				private function drawLine(y:int):void {			graphics.lineStyle(0, 0xFFFFFF, 0.1);			graphics.moveTo(w, y);			graphics.lineTo(stage.stageWidth, y);		}*/			}	}