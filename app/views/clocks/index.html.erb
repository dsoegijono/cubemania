<%= partial 'chart' %>
<%= partial 'timer' %>

<%- javascript_tag do -%>
  function toggleTimer() {
    this.interval == null ? startTimer() : stopTimer();
  }
  function startTimer() {
    if (<%= @puzzle.countdown %> == 0) {
      startTime = new Date().getTime();
      $("#go").addClass("running");
      interval = setInterval(countUp, 1);
    } else {
      $("#go").text(<%= @puzzle.countdown %>).addClass("countdown");
      interval = setInterval(countDown, 1000);
    } 
  }
  function countDown() {
    var time = $("#go").text() - 1;
    $("#go").text(time);
    if (time == 0) {
      $("#go").removeClass("countdown").addClass("running");
      clearInterval(interval);
      startTime = new Date().getTime();
      interval = setInterval(countUp, 1);
    }
  }
  function countUp() {
    var time = (new Date().getTime() - startTime) / 1000;
    $("#go").text(time.toFixed(2));
  }
  function stopTimer() {
    clearInterval(interval); interval = null;
    if ($("#go").hasClass("countdown")) {
      $("#go").text("GO!").removeClass("countdown");
    }
    else {
      $("#timer li:not(.done):first").addClass("done").find(".time").text($("#go").text());
      $("#average span").text(calculateAverage().toFixed(2));
      $("#go").removeClass("running");
      if ($("#timer li.done").length == <%= @puzzle.attempt_count %>) {
        $("#timer input").removeAttr("disabled");
      } else {
        updateScramble();
      }
    }
  }
  function calculateAverage() {
    var times = $("#timer li.done:not('.dnf') .time").map(function() {
      var time = parseFloat($(this).text());
      return isNaN(time) ? 0 : time;
    }).get();
    if (times.length == 0) return 0;
    times.sort(function(a, b) {
      return a - b;
    });
    var count = times.length;
    if (count > 4) {
      if ($("#timer li.dnf").length == 0) times.shift();
      times.pop();
      count -= 2;
    }
    var sum = 0;
    for (var i = 0; i < count; i++) {
      sum += times[i];
    }
    return Math.round(sum / count * 100) / 100;
  }
  function updateScramble() {
    $("#scramble").text($("#timer li:not(.done):first .scramble").text());
  }
  function commitTimes() {
    var average = calculateAverage() * 1000;
    var map = {"average[time]": average, "average[dnf]": $("#average span").hasClass("dnf"), "average[puzzle_id]": "<%= @puzzle.id %>", "authenticity_token": "<%= form_authenticity_token %>"};
    $("#timer li.done").each(function(index) {
      map["singles[" + index + "][time]"] = $(this).find(".time").text() * 1000;
      map["singles[" + index + "][scramble]"] = $(this).find(".scramble").text();
      map["singles[" + index + "][dnf]"] = $(this).hasClass("dnf");
      map["singles[" + index + "][puzzle_id]"] = "<%= @puzzle.id %>";
    });
    $.post("<%= clocks_path %>", map, function(data, status) {
      eval(data);
    }, "js");
  }
  function toggleDnf(index) {
    $("#timer li:eq(" + index + ")").toggleClass("dnf");
    $("#average span").text(calculateAverage().toFixed(2));
    if ($("#timer li.dnf").length >= <%= @puzzle.attempt_count > 4 ? 2 : 1 %>) {
      $("#timer input").removeAttr("disabled");
      $("#average span").addClass("dnf");
    } else {
      if($("#timer li.done").length < <%= @puzzle.attempt_count %>) {
        $("#timer input").attr("disabled", "disabled");
      }
      $("#average span").removeClass("dnf");
    }
  }
  $(window).keyup(function(event) {
    var finished = $("#timer li.done").length == <%= @puzzle.attempt_count %>;
    if (event.keyCode == 32) {
      if (!finished)
        toggleTimer();
      else
        commitTimes();
    }
  });
  updateScramble();
<%- end -%>