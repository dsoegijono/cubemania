Chart:
  Clicking on a bubble leads to Average Details load from server (averages#show). You also can click "Destroy" there!
  Small chart for scrolling and zooming
  Compare with...
  Threshold at where your best x averages lie below
  Remove data point from Chart after destroying it

General:
  make a general cache_key(args*) helper method which joins with "/"
  Remove Timer JS Code to external JS file. Use the data-attributes for urls and stuff. Also remove all link_to_functions
  Puzzle#destroy is missing
  Reduce the size of averages.json to fit more averages into memcache (create tooltip at client side and only send raw data)
  Better cache expiration for averages. At the moment all averages of one user get expired if he creates a new average.

Random ideas:
  Gray out comments from users, which are stupid. (http://www.joystiq.com/2010/03/17/steam-on-mac-os-x-interview/#comments)

Matches should be destroyable, but only through a destroy request including a reason why the user wants to delete that match.
Ask Patrick for a user's statistics table.
User#index becomes the ranking page.
Reintroduce Suggestions like "Get the Record!"

Matches:
  Every Match has shouts
  Design results page
  Email the opponent if he has a new challenge

Bugs:


Enhancements:

  Protect Attributes (User Update, Competition Update) # override User#write_attribute <--- nope, that's an ugly solution. take a look at the competitions and
                                                         users controller. the code is already in there:
                                                               #protect :sticky, :but => :admin, :only => [:create, :update]
                                                         read it like: protect attribute sticky from everyone but admins (only necessary for create and update)
                                                         the protect method should be put into the authentication plugin. would also be nice to split the
                                                         authentication class into authentication and authorization.
  Clocks Create: Slide Notice Up / Down
  ESL-like awards: Most solves/day, ...
  Users: Display ranking for each puzzle (puzzle.records.average.index(User.find_by_name('tim').averages.record(2) + 1)
  Competitions: password protected/invitatin only
  Competition Messages/Challenges Vertical Align
  Proper route for competitions index repeat
  Reevaluate Indexes and Includes
  Competitions: Challange another user
  Competitions: Add notice for new record
  Records: Write a method which repairs record flags.
  Competitions: Disable updating of competitions#repeat after first iteration
  Timer: Add the countdown again + let the user disable the countdown (and save his decision)
  Timer: Add rolling averages for last 100/12 solves and some more statistics below the chart.

New Features:

  Admin Buttons
  Multiple Blindfolded!